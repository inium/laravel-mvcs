<?php

namespace {{ namespace }};

use Inium\Multier\Common\Base\Dto\PageDto;
use {{ contentDtoNamespace }}\{{ contentDtoClass }};
use {{ createDtoNamespace }}\{{ createDtoClass }};
use {{ updateDtoNamespace }}\{{ updateDtoClass }};

interface {{ class }}
{
    /**
     * List or Search contents
     *
     * @param integer $page         page number
     * @param integer $rows         # of rows per page
     * @param string|null $query    search text
     * @return PageDto
     */
    public function find(int $page, int $rows, ?string $query): PageDto;

    /**
     * Find a content by id
     *
     * @param integer $id   Content id
     * @return {{ contentDtoClass }}
     */
    public function findById(int $id): {{ contentDtoClass }};

    /**
     * Insert a content
     *
     * @param {{ createDtoClass }} $dto Dto
     * @return {{ contentDtoClass }}
     */
    public function create({{ createDtoClass }} $dto): {{ contentDtoClass }};

    /**
     * Update a content
     *
     * @param {{ updateDtoClass }} $dto Dto
     * @return integer  # of affected rows
     */
    public function update({{ updateDtoClass }} $dto, int $id): int;

    /**
     * Delete a content by id
     *
     * @param integer $id   Content id
     * @return integer  # of deleted rows
     */
    public function deleteById(int $id): int;
}
